<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yll.mapper.AreaMapper">

	<resultMap id="RESULT_MAP" type="yll.entity.Area">
		<id property="id" column="id" jdbcType="INTEGER" />
		<result property="pid" column="pid" jdbcType="VARCHAR" />
		<result property="node" column="node" jdbcType="VARCHAR" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="level" column="level" jdbcType="VARCHAR" />
		<result property="lat" column="lat" jdbcType="DECIMAL" />
		<result property="lng" column="lng" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="RESULT_VO_MAP" type="yll.service.model.vo.AreaVo" extends="RESULT_MAP">
		<collection property="list" resultMap="RESULT_AREA_MAP_ONE" />
	</resultMap>

	<resultMap id="RESULT_AREA_MAP_ONE" type="yll.service.model.vo.AreaVo" extends="RESULT_MAP">
		<result property="id" column="aid" jdbcType="VARCHAR" />
		<result property="name" column="aname" jdbcType="VARCHAR" />
		<result property="level" column="alevel" jdbcType="VARCHAR" />
		<result property="lat" column="alat" jdbcType="DECIMAL" />
		<result property="lng" column="alng" jdbcType="DECIMAL" />
		<collection property="list" resultMap="RESULT_AREA_MAP_TWO" />
	</resultMap>

	<resultMap id="RESULT_AREA_MAP_TWO" type="yll.service.model.vo.AreaVo">
		<result property="id" column="bid" jdbcType="VARCHAR" />
		<result property="name" column="bname" jdbcType="VARCHAR" />
		<result property="level" column="blevel" jdbcType="VARCHAR" />
		<result property="lat" column="blat" jdbcType="DECIMAL" />
		<result property="lng" column="blng" jdbcType="DECIMAL" />
	</resultMap>

	<sql id="TABLE">area</sql>

	<sql id="COLUMNS">
		id, pid, node, name, level, lat, lng
	</sql>

	<sql id="VALUES">
		#{id}, #{pid}, #{node},#{name}, #{level}, #{lat}, #{lng}
	</sql>

	<sql id="SET_VALUES">
		<trim suffixOverrides=",">
			<if test=" pid != null">
				pid = #{pid},
			</if>
			<if test=" node != null">
				node = #{node},
			</if>
			<if test=" name != null">
				name = #{name},
			</if>
			<if test=" level != null">
				level = #{level},
			</if>
			<if test=" lat != null">
				lat = #{lat},
			</if>
			<if test=" lng != null">
				lng = #{lng},
			</if>
		</trim>
	</sql>

	<sql id="WHERES">
		<if test=" id != null and id != ''">
			and id = #{id}
		</if>
		<if test=" pid != null ">
			and pid = #{pid}
		</if>
		<if test=" node != null  and node != '' ">
			and node = #{node}
		</if>
		<if test=" level != null ">
			and level = #{level}
		</if>
		<if test=" name != null and name != '' ">
			and name like CONCAT(CONCAT('%',#{name}),'%')
		</if>
		<if test=" lat != null ">
			and lat like CONCAT(CONCAT('%',#{lat}),'%')
		</if>
		<if test=" lng != null ">
			and lng like CONCAT(CONCAT('%',#{lng}),'%')
		</if>
		and level !=4
	</sql>

	<update id="save">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		) VALUES (
		<include refid="VALUES" />
		)
		ON DUPLICATE KEY UPDATE
		<include refid="SET_VALUES" />
	</update>

	<insert id="insert" parameterType="yll.entity.Area">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		)
		VALUES
		(
		<include refid="VALUES" />
		)
	</insert>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		<include refid="TABLE" />
		WHERE
		id =#{id}
	</delete>

	<delete id="deleteAll">
		DELETE FROM
		<include refid="TABLE" />
	</delete>

	<update id="update" parameterType="yll.entity.Area">
		UPDATE
		<include refid="TABLE" />
		SET
		<include refid="SET_VALUES" />
		WHERE
		id = #{id}
	</update>

	<select id="getById" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id =#{id}
	</select>

	<select id="findAll" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
	</select>

	<select id="findBy" parameterType="yll.entity.Area" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY id ASC
	</select>

	<select id="getAppList" parameterType="yll.entity.Area" resultMap="RESULT_MAP">
		SELECT
		 id, name, level, lat, lng
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY id ASC
	</select>

	<select id="getAppList2" parameterType="yll.entity.Area" resultMap="RESULT_VO_MAP">
		SELECT
		a1.id, a1.name, a1.level, a1.lat, a1.lng,
		a2.id aid, a2.name aname, a2.level alevel, a2.lat alat, a2.lng alng,
		a3.id bid, a3.name bname, a3.level blevel, a3.lat blat, a3.lng blng
		FROM
		<include refid="TABLE" /> a1
		INNER JOIN
        <include refid="TABLE" /> a2
        ON
        a2.pid = a1.id
        INNER JOIN
        <include refid="TABLE" /> a3
        ON
        a3.pid = a2.id AND a3.level !=4
		WHERE a1.id != '0'
		<if test=" id != null and id != ''">
			and a1.id = #{id}
		</if>
		<if test=" pid != null ">
			and a1.pid = #{pid}
		</if>
		<if test=" node != null  and node != '' ">
			and a1.node = #{node}
		</if>
		<if test=" level != null ">
			and a1.level = #{level}
		</if>
		<if test=" name != null and name != '' ">
			and a1.name like CONCAT(CONCAT('%',#{name}),'%')
		</if>
		<if test=" lat != null ">
			and a1.lat like CONCAT(CONCAT('%',#{lat}),'%')
		</if>
		<if test=" lng != null ">
			and a1.lng like CONCAT(CONCAT('%',#{lng}),'%')
		</if>
		and a1.level != 4
		ORDER BY a1.id ASC
	</select>

</mapper>