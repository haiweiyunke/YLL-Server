<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yll.mapper.CustomerPointsMapper">

	<resultMap id="RESULT_MAP" type="yll.entity.CustomerPoints">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<result property="targetId" column="target_id" jdbcType="VARCHAR" />
		<result property="point" column="point" jdbcType="INTEGER" />
		<result property="state" column="state" jdbcType="VARCHAR" />
		<result property="remark" column="remark" jdbcType="VARCHAR" />
		<result property="enabled" column="enabled" jdbcType="INTEGER" />
		<result property="deleted" column="deleted" jdbcType="INTEGER" />
		<result property="creator" column="creator" jdbcType="VARCHAR" />
		<result property="createdTime" column="created_time" jdbcType="TIMESTAMP" />
		<result property="modifier" column="modifier" jdbcType="VARCHAR" />
		<result property="modifiedTime" column="modified_time" jdbcType="TIMESTAMP" />
		<result property="deleter" column="deleter" jdbcType="VARCHAR" />
		<result property="deletedTime" column="deleted_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="RESULT_VO_MAP" type="yll.service.model.vo.CustomerPointsVo" extends="RESULT_MAP">
		<result property="username" column="username" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="TABLE">customer_points</sql>

	<sql id="COLUMNS">
		id, target_id, point, state, remark,
		enabled, deleted, creator, created_time,
		modifier, modified_time, deleter, deleted_time
	</sql>

	<sql id="VALUES">
		#{id}, #{targetId}, #{point}, #{state}, #{remark},
		#{enabled}, #{deleted}, #{creator}, #{createdTime},
		#{modifier},#{modifiedTime}, #{deleter}, #{deletedTime}
	</sql>

	<sql id="SET_VALUES">
		<trim suffixOverrides=",">
			<if test=" targetId != null">
				target_id = #{targetId},
			</if>
			<if test=" point != null">
				point = #{point},
			</if>
			<if test=" state != null">
				state = #{state},
			</if>
			<if test=" remark != null">
				remark = #{remark},
			</if>
			<if test=" enabled != null">
				enabled = #{enabled},
			</if>
			<if test=" deleted != null">
				deleted = #{deleted},
			</if>
			<if test=" creator != null">
				creator = #{creator},
			</if>
			<if test=" createdTime != null">
				created_time = #{createdTime},
			</if>
			<if test=" modifier != null">
				modifier = #{modifier},
			</if>
			<if test=" modifiedTime != null">
				modified_time = #{modifiedTime},
			</if>
			<if test=" deleter != null">
				deleter = #{deleter},
			</if>
			<if test=" deletedTime != null">
				deleted_time = #{deletedTime},
			</if>
		</trim>
	</sql>

	<sql id="WHERES">
		<if test=" id != null and id != ''">
			and id = #{id}
		</if>
		<if test=" targetId != null and targetId != ''">
			and target_id = #{targetId}
		</if>
		<if test=" enabled != null ">
			and enabled = #{enabled}
		</if>
		and deleted = 0
	</sql>

	<update id="save">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		) VALUES (
		<include refid="VALUES" />
		)
		ON DUPLICATE KEY UPDATE
		<include refid="SET_VALUES" />
	</update>

	<insert id="insert" parameterType="yll.entity.CustomerPoints">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		)
		VALUES
		(
		<include refid="VALUES" />
		)
	</insert>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		<include refid="TABLE" />
		WHERE
		id =#{id}
	</delete>

	<delete id="deleteAll">
		DELETE FROM
		<include refid="TABLE" />
	</delete>

	<update id="update" parameterType="yll.entity.CustomerPoints">
		UPDATE
		<include refid="TABLE" />
		SET
		<include refid="SET_VALUES" />
		WHERE
		id = #{id}
	</update>

	<select id="getById" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id =#{id}
	</select>

	<select id="findAll" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
	</select>

	<select id="findBy" parameterType="yll.entity.CustomerPoints" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY created_time DESC
	</select>

	<select id="findByWithName" parameterType="yll.service.model.vo.CustomerPointsVo" resultMap="RESULT_VO_MAP">
		SELECT
		m.id, m.target_id, m.point, m.state, m.remark,
		m.enabled,deleted, m.creator, m.created_time,
		m.modifier, m.modified_time, m.deleter, m.deleted_time,
		sec.username
		FROM
		<include refid="TABLE" /> m
		LEFT JOIN
		customer sec
		ON sec.id = m.target_id
		WHERE m.id != '0'
		<include refid="WHERES" />
		<if test=" username != null and username != ''">
			and sec.username like CONCAT(CONCAT('%',#{username}),'%')
		</if>
		ORDER BY  m.created_time DESC
	</select>

	<select id="getAppDetail" parameterType="yll.entity.CustomerPoints" resultMap="RESULT_MAP">
		SELECT
		point
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY created_time DESC
		limit 0, 1
	</select>

</mapper>