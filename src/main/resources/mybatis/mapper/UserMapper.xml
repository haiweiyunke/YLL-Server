<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yll.mapper.UserMapper">

	<resultMap id="RESULT_MAP" type="yll.entity.User">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<result property="departmentId" column="department_id" jdbcType="VARCHAR" />
		<result property="departmentName" column="department_name" jdbcType="VARCHAR" />
		<result property="account" column="account" jdbcType="VARCHAR" />
		<result property="password" column="password" jdbcType="VARCHAR" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="remark" column="remark" jdbcType="VARCHAR" />
		<result property="enabled" column="enabled" jdbcType="INTEGER" />
		<result property="deleted" column="deleted" jdbcType="INTEGER" />
		<result property="createdBy" column="created_by" jdbcType="VARCHAR" />
		<result property="createdAt" column="created_at" jdbcType="TIMESTAMP" />
		<result property="updatedBy" column="updated_by" jdbcType="BIGINT" />
		<result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="TABLE">user</sql>

	<sql id="COLUMNS">
		id, department_id, department_name,account, password,
		name, remark, enabled,deleted,
		created_by, created_at, updated_by, updated_at
	</sql>

	<sql id="VALUES">
		#{id}, #{departmentId}, #{departmentName},#{account}, #{password},
		#{name}, #{remark}, #{enabled}, #{deleted},
		#{createdBy}, #{createdAt}, #{updatedBy}, #{updatedAt}
	</sql>

	<sql id="SET_VALUES">
		<trim suffixOverrides=",">
			<if test=" departmentId != null">
				department_id = #{departmentId},
			</if>
			<if test=" departmentName != null">
				department_name = #{departmentName},
			</if>
			<if test=" account != null">
				account = #{account},
			</if>
			<if test=" password != null">
				password = #{password},
			</if>
			<if test=" name != null">
				name = #{name},
			</if>
			<if test=" remark != null">
				remark = #{remark},
			</if>
			<if test=" enabled != null">
				enabled = #{enabled},
			</if>
			<if test=" deleted != null">
				deleted = #{deleted},
			</if>
			<if test=" createdBy != null">
				created_by = #{createdBy},
			</if>
			<if test=" createdAt != null">
				created_at = #{createdAt},
			</if>
			<if test=" updatedBy != null">
				updated_by = #{updatedBy},
			</if>
			<if test=" updatedAt != null">
				updated_at = #{updatedAt},
			</if>
		</trim>
	</sql>

	<sql id="WHERES">
		<if test=" id != null and id != ''">
			and id = #{id}
		</if>
		<if test=" departmentId != null and departmentId != ''">
			and department_id = #{departmentId}
		</if>
		<if test=" account != null and account != '' ">
			and account = #{account}
		</if>
		<if test=" name != null and name != '' ">
			and name like CONCAT(CONCAT('%',#{name}),'%')
		</if>
		<if test=" enabled != null ">
			and enabled = #{enabled}
		</if>
		and deleted = 0
	</sql>

	<update id="save">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		) VALUES (
		<include refid="VALUES" />
		)
		ON DUPLICATE KEY UPDATE
		<include refid="SET_VALUES" />
	</update>

	<insert id="insert" parameterType="yll.entity.User">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		)
		VALUES
		(
		<include refid="VALUES" />
		)
	</insert>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		<include refid="TABLE" />
		WHERE
		id =#{id}
	</delete>

	<delete id="deleteAll">
		DELETE FROM
		<include refid="TABLE" />
	</delete>

	<update id="update" parameterType="yll.entity.User">
		UPDATE
		<include refid="TABLE" />
		SET
		<include refid="SET_VALUES" />
		WHERE
		id = #{id}
	</update>

	<select id="getById" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id =#{id}
	</select>

	<select id="findAll" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
	</select>

	<select id="getByAccount" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE account = #{account}
	</select>

	<select id="findBy" parameterType="yll.entity.User" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY account ASC
	</select>

</mapper>