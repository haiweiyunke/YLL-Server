<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yll.mapper.DicMapper">

	<resultMap id="RESULT_MAP" type="yll.entity.Dic">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<result property="targetId" column="target_id" jdbcType="VARCHAR" />
		<result property="code" column="code" jdbcType="VARCHAR" />
		<result property="codename" column="codename" jdbcType="VARCHAR" />
		<result property="remark" column="remark" jdbcType="VARCHAR" />
		<result property="remarks" column="remarks" jdbcType="LONGVARCHAR" />
		<result property="state" column="state" jdbcType="VARCHAR" />
		<result property="ordinal" column="ordinal" jdbcType="VARCHAR" />
		<result property="creator" column="creator" jdbcType="VARCHAR" />
		<result property="createdTime" column="created_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="TABLE">dic</sql>

	<sql id="COLUMNS">
		id, target_id,code,codename,remark, remarks, state, ordinal,
		creator, created_time
	</sql>

	<sql id="VALUES">
		#{id}, #{targetId}, #{code},#{codename}, #{remark}, #{remarks}, #{state}, #{ordinal},
		#{creator}, #{createdTime}
	</sql>

	<sql id="SET_VALUES">
		<trim suffixOverrides=",">
			<if test=" targetId != null">
				target_id = #{targetId},
			</if>
			<if test=" code != null">
				code = #{code},
			</if>
			<if test=" codename != null">
				codename = #{codename},
			</if>
			<if test=" remark != null">
				remark = #{remark},
			</if>
			<if test=" remarks != null">
				remarks = #{remarks},
			</if>
			<if test=" state != null">
				state = #{state},
			</if>
			<if test=" ordinal != null">
				ordinal = #{ordinal},
			</if>
			<if test=" creator != null">
				creator = #{creator},
			</if>
			<if test=" createdTime != null">
				created_time = #{createdTime},
			</if>
		</trim>
	</sql>

	<sql id="WHERES">
		<if test=" id != null and id != ''">
			and id = #{id}
		</if>
		<if test=" targetId != null and targetId != ''">
			and target_id = #{targetId}
		</if>
		<if test=" code != null and code != '' ">
			and code like CONCAT(CONCAT('%',#{code}),'%')
		</if>
		<if test=" codename != null and codename != '' ">
			and codename like CONCAT(CONCAT('%',#{codename}),'%')
		</if>
	</sql>

	<update id="save">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		) VALUES (
		<include refid="VALUES" />
		)
		ON DUPLICATE KEY UPDATE
		<include refid="SET_VALUES" />
	</update>

	<insert id="insert" parameterType="yll.entity.Dic">
		INSERT INTO
		<include refid="TABLE" />
		(
		<include refid="COLUMNS" />
		)
		VALUES
		(
		<include refid="VALUES" />
		)
	</insert>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		<include refid="TABLE" />
		WHERE
		id =#{id}
	</delete>

	<delete id="deleteAll">
		DELETE FROM
		<include refid="TABLE" />
	</delete>

	<update id="update" parameterType="yll.entity.Dic">
		UPDATE
		<include refid="TABLE" />
		SET
		<include refid="SET_VALUES" />
		WHERE
		id = #{id}
	</update>

	<select id="getById" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id =#{id}
	</select>

	<select id="findAll" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		ORDER BY ordinal
	</select>

	<select id="findBy" parameterType="yll.entity.Dic" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE id != '0'
		<include refid="WHERES" />
		ORDER BY ordinal
	</select>

	<select id="getByCode" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		<include refid="COLUMNS" />
		FROM
		<include refid="TABLE" />
		WHERE code =#{code}
		ORDER BY ordinal
	</select>

	<select id="findByTargetId" parameterType="java.lang.String" resultMap="RESULT_MAP">
		SELECT
		target_id, code, codename, remark, ifnull(remarks,'') remarks
		FROM
		<include refid="TABLE" />
		WHERE target_id =#{targetId}
		and state=1
		ORDER BY ordinal
	</select>

</mapper>
